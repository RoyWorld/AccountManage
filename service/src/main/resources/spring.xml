<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring      http://mybatis.org/schema/mybatis-spring.xsd
           http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="order" value="1"/>-->
        <!--<property name="ignoreUnresolvablePlaceholders" value="true"/>-->
    <!--</bean>-->

    <!--<bean id="zkResource" class="cn.thinkjoy.cloudstack.sz.ZookeeperResource"/>-->
    <!--<bean id="zkPropConfigurer" class="cn.thinkjoy.cloudstack.sz.ZookeeperConfigurer">-->
        <!--<property name="order" value="2"/>-->
        <!--<property name="ignoreUnresolvablePlaceholders" value="true"/>-->
        <!--<property name="location">-->
            <!--<ref bean="zkResource"/>-->
        <!--</property>-->
    <!--</bean>-->

    <aop:aspectj-autoproxy/>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:annotation-config/>
    <context:component-scan base-package="com.transation"/>


    <!-- 引入dubbo配置文件 请根据需要更改-->
    <!--<import resource="classpath:/dubbo/dap-dubbo-provider.xml"/>-->
    <!--<import resource="classpath:/dubbo/dap-dubbo-consumer.xml"/>-->
    <!--默认的redis配置，启动时会建立连接-->
    <!--<import resource="classpath*:spring-redis.xml"/>-->
    <!-- ucm的配置文件，用于统一登录 -->
    <!--<import resource="classpath*:spring-iauth.xml"/>-->

    <!-- 消息队列插件 -->
    <!--<import resource="classpath*:spring-activemq.xml"/>-->

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <qualifier value="platform"/>
    </bean>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描domain目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="com.transation.model"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:/mybatis/**/*DAO.xml"/>
    </bean>
    <!-- 扫描basePackage下接口 自动生成代理实现类 -->
    <mybatis:scan base-package="com.transation.dao" factory-ref="sqlSessionFactory"/>

    <!--数据源配置-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/test"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!--上传文件配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
        <!-- max size of file in memory (in bytes) -->
        <property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
        <!--file default encoding -->
        <property name="defaultEncoding" value="utf-8"/>
    </bean>
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
        <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
        <!--<property name="url" value="${jdbc_url}"/>-->
        <!--<property name="username" value="${jdbc_user}"/>-->
        <!--<property name="password" value="${jdbc_password}"/>-->

        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="1"/>-->
        <!--<property name="minIdle" value="1"/>-->
        <!--<property name="maxActive" value="20"/>-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="60000"/>-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->

        <!--<property name="validationQuery" value="SELECT 'x'"/>-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--<property name="testOnReturn" value="false"/>-->

        <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="true"/>-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>-->

        <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
        <!--<property name="filters" value="stat"/>-->
    <!--</bean>-->

</beans>
